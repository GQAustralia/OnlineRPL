/****************************************************************
 *
 * CSS Percentage Circle
 * Author: Andre Firchow
 *
*****************************************************************/


// Compass utilities
// @import "compass";


// VARS
$circle-width: 0.020em;
$circle-width-hover: 0.020em;

// colors default
$primary-color: $gray;
$secondary-color: $gray-lighter;
$bg-color: white;

$primary-color-green: $brand-green;
$primary-color-orange: $brand-orange;


// colors dark skin
$primary-color-dark: $gray-dark;
$secondary-color-dark: $gray;
$bg-color-dark: white;

// $primary-color-green-dark: #5fd400;
// $primary-color-orange-dark: #e08833;



// CIRCLE
// classes 2 extend
.rect-auto{
	clip: rect(auto, auto, auto, auto);
}

.pie {
	position: absolute;
	border: $circle-width solid $primary-color;
	width: 1 - (2 * $circle-width);
	height: 1 - (2 * $circle-width);
	clip: rect(0em, 0.5em, 1em, 0em);
	border-radius: 50%;
    -ms-transform: rotate(0deg); /* IE 9 */
    -webkit-transform: rotate(0deg); /* Chrome, Safari, Opera */
    transform: rotate(0deg);
}

.pie-fill {
	    -ms-transform: rotate(180deg); /* IE 9 */
    -webkit-transform: rotate(180deg); /* Chrome, Safari, Opera */
    transform: rotate(180deg);
}



// main
.c100 {

	*, *:before, *:after {
		@include box-sizing(content-box);
	}

	position: relative;
	font-size: 10em;
	font-style: normal;
	width: 1em;
	height: 1em;
	border-radius: 50%;
	float: none;
	// margin: auto;
	background-color: $secondary-color;

	// center circle to its parent
	&.center{
		float: none;
		margin: 0 auto;
	}

	// centered value inside circle
	> span {
		position: absolute;
		width: 100%;
		z-index: 1;
		left: 0;
		top: 0;

		width: 3.33em;
		line-height: 3.33em;
		font-size: 0.3em;
		color: $primary-color;

		display: block;
		text-align: center;
		white-space: nowrap;
		@include transition-property(all);
		@include transition-duration(0.2s);
		@include transition-timing-function(ease-out);

		* {
			font-style: normal;
		}
	}

	// background inside the circle
	&:after{
		position: absolute;
		top: $circle-width;
		left: $circle-width;
		display: block;
		content: " ";
		border-radius: 50%;
		background-color: $bg-color;
		width: 1 - (2 * $circle-width);
		height: 1 - (2 * $circle-width);
		@include transition-property(all);
		@include transition-duration(0.2s);
		@include transition-timing-function(ease-in);
	}

	// the slice (mask)
	.slice {
		position: absolute;
		width: 1em;
		height: 1em;
		clip: rect(0em, 1em, 1em, 0.5em);
	}

	// bigger size
	&.big{
		font-size: 15em;
	}

	// smaller size
	&.small{
		$circle-width: 0.020em;
		font-size: 9em;
		.slice > .bar {
			border: $circle-width solid $primary-color;
			width: 1 - (2 * $circle-width);
			height: 1 - (2 * $circle-width);
			clip: rect(0em, 0.5em, 1em, 0em);
		}
		&:after {
			top: $circle-width;
			left: $circle-width;
		    width: 1 - (2 * $circle-width);
		    height: 1 - (2 * $circle-width);
		}

		> span {
			width: 3.33em;
			line-height: 3.33em;
			font-size: 0.3em;
		}
	}

	// circle to show the status
	.bar {
		@extend .pie;
	}

	// loop to rotate all 100 circles
	@for $j from 1 through 100 {
		&.p#{$j} .bar {

			$deg: 360/100 * $j;
			
		    -ms-transform: rotate(#{$deg}deg); /* IE 9 */
		    -webkit-transform: rotate(#{$deg}deg); /* Chrome, Safari, Opera */
		    transform: rotate(#{$deg}deg);
			// @include rotate(( 360/100 * $j));
		}
	}


	// loop to create all needed elements automatically
	@for $j from 51 through 100 {

		&.p#{$j} .slice {
			@extend .rect-auto;
		}

		&.p#{$j} .bar:after{
			@extend .pie-fill;
		}

		&.p#{$j} .fill{
			@extend .pie;
			@extend .pie-fill;
		}

	}

	// override colors for the dark skin
	&.dark {

		background-color: $secondary-color-dark;

		.bar,
		.fill{
			border-color: $primary-color-dark !important;
		}

		> span {
			color: $secondary-color-dark;
		}


		&:after{
			background-color: $bg-color-dark;
		}

		&:hover{

			> span {
				color: $primary-color-dark;
			}

		}

	}


	// green skin
	&.green{

		.bar, .fill { border-color: $primary-color-green !important;}

		&:hover{
			> span { color: $primary-color-green;}
		}

	}


	// orange skin
	&.orange{

		.bar, .fill { border-color: $primary-color-orange !important;}

		&:hover{
			> span { color: $primary-color-orange;}
		}

	}
}