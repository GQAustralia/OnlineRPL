{% extends 'main.html.twig' %}
{% block title %}GQ - RPL Reset password{% endblock %}
{% block content %}
   <div class="row text-center">
        <h3>Reset Password</h3>
    </div>
    <div class="row">
        {% if validRequest == 1 %}
            <div class="gq-well" style="display:none;">
                <div class="gq-well well">
                    <span class="login-warning-icon" aria-hidden="true"></span>
                    <div class="login-warning-text">{{message}}</div>
                </div>
            </div>
        
        <form name="frmChangePassword" id="frmChangePassword" method="post">
          <div class="form-group">
            <input type="password" name = 'password' class="form-control password" id="InputPassword1" placeholder="New Password">
            </div>
            <div class="form-group">
            <input type="password" name = 'cpassword' class="form-control password" id="InputcPassword1" placeholder="Confirm Password">
          </div>
          <div class="row">
            <div class="col-xs-4 pull-left">
                <a href="../login" class="btn btn-white margin-top15">Login</a>
            </div>
            <div class="col-xs-4 pull-right">
                <button type="submit" class="btn btn-red margin-top15">Reset</button>
            </div>
          </div>
        </form>
        {% else %}
            <div class="row text-center">
                Sorry you are accessing invalid token!
            </div>
        {% endif %}

    </div>
{% endblock %}

{% block javascripts %}
      <script>
        // When the document is ready
        $(document).ready(function () {
            //validation rules
            //by default it will append a <label class="error> element to the invalid input
            //and will add a "error" class to the input
            $("#frmChangePassword").validate({
                rules: {
                    "InputPassword1": {
                        required: true,
                        minlength: 5,
                        maxlength:15
                    },                        
                    "InputcPassword1":{
                        required:true,
                        minlength:5,
                        maxlength:15,        
                        equalTo: "#InputPassword1" 
                    }
                    
                },
                messages:
                {
                    "InputPassword1":{
                        required:"Please enter New Password",
                        minlength:"New Password should contain minimum 5 characters",
                        maxlength:"New Password should not exceed 15 characters",
                    },
                    "InputcPassword1":{
                        required:"Please enter Confirm Password",
                        equalTo :" Enter Confirm Password Same as New Password"
                    }
                },
                errorElement: "div",
                wrapper: "div",  // a wrapper around the error message
                errorPlacement: function(error, element) {
					$('.gq-well').show();
					$('.login-warning-text').html(error);
                    /*offset = element.offset();
                    error.insertBefore(element)
                    error.addClass('message');  // add a class to the wrapper
                    error.css('position', 'absolute');
                    error.css('left', offset.left + element.outerWidth());
                    error.css('top', offset.top);*/
                }
            });
        });
    </script>
	{% if message %}		
		<script>
			$('.gq-well').show();
			$('.login-warning-text').html(error);
		</script>
	{% endif %}
{% endblock %}